===== DETALLE DE LA CODIFICACIÓN HAMMING =====

Construcción del mensaje recibido:
	- Posición 1: bit recibido '1' (paridad Hamming, r)
	- Posición 2: bit recibido '1' (paridad Hamming, r)
	- Posición 3: bit recibido '0' (dato, d)
	- Posición 4: bit recibido '1' (paridad Hamming, r)
	- Posición 5: bit recibido '1' (dato, d)
	- Posición 6: bit recibido '0' (dato, d)
	- Posición 7: bit recibido '1' (dato, d)
	- Posición 8: bit recibido '0' (paridad Hamming, r)
	- Posición 9: bit recibido '1' (dato, d)
	- Posición 10: bit recibido '0' (dato, d)
	- Posición 11: bit recibido '1' (dato, d)

Inicializando msgBitsCalculated:
	- Bit de redundancia tipo 'r' inicializado en posición 1 con valor -1
	- Bit de redundancia tipo 'r' inicializado en posición 2 con valor -1
	- Bit de dato en posición 3 con valor 0 copiado
	- Bit de redundancia tipo 'r' inicializado en posición 4 con valor -1
	- Bit de dato en posición 5 con valor 1 copiado
	- Bit de dato en posición 6 con valor 0 copiado
	- Bit de dato en posición 7 con valor 1 copiado
	- Bit de redundancia tipo 'r' inicializado en posición 8 con valor -1
	- Bit de dato en posición 9 con valor 1 copiado
	- Bit de dato en posición 10 con valor 0 copiado
	- Bit de dato en posición 11 con valor 1 copiado

Calculando y asignando bits de redundancia:

r1 cubre posiciones [1, 3, 5, 7, 9, 11] -> valores: [1=-1, 3=0, 5=1, 7=1, 9=1, 11=1]. Total de 1s: 4. Paridad par usada -> bit de paridad: 0
	 - Bit de redundancia r1 asignado con valor 0
r2 cubre posiciones [2, 3, 6, 7, 10, 11] -> valores: [2=-1, 3=0, 6=0, 7=1, 10=0, 11=1]. Total de 1s: 2. Paridad par usada -> bit de paridad: 0
	 - Bit de redundancia r2 asignado con valor 0
r4 cubre posiciones [4, 5, 6, 7] -> valores: [4=-1, 5=1, 6=0, 7=1]. Total de 1s: 2. Paridad par usada -> bit de paridad: 0
	 - Bit de redundancia r4 asignado con valor 0
r8 cubre posiciones [8, 9, 10, 11] -> valores: [8=-1, 9=1, 10=0, 11=1]. Total de 1s: 2. Paridad par usada -> bit de paridad: 0
	 - Bit de redundancia r8 asignado con valor 0

===== DETECCIÓN DE ERRORES =====
Comparación de bits de paridad recibidos vs calculados:
Bits de paridad (posRedundancyBits): [1, 2, 4, 8]
 - Posición 1: recibido = 1, calculado = 0
   -> Diferencia detectada en bit de paridad r1
 - Posición 2: recibido = 1, calculado = 0
   -> Diferencia detectada en bit de paridad r2
 - Posición 4: recibido = 1, calculado = 0
   -> Diferencia detectada en bit de paridad r4
 - Posición 8: recibido = 0, calculado = 0
-> Se detectaron errores de paridad.
 - Posición decimal del error estimado: 7
-> No hay bit de paridad extendida → No se puede confirmar si hay múltiples errores.
===== FIN DE DETECCIÓN DE ERRORES =====

===== PROCESO DE CONSTRUCCIÓN DEL MENSAJE FINAL =====

-> Se detectó un error en el mensaje.
-> No se puede corregir el error. Se requiere retransmisión.
 - Resultado final: RETRANSMITIR
===== FIN DEL PROCESO DE CONSTRUCCIÓN =====

===== FIN DEL DETALLE =====
